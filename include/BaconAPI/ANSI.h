// Purpose: Defines for every ANSI code.
// Created on: 3/29/22 @ 11:27 AM

// Copyright (c) 2022, 2023, PortalPlayer <email@portalplayer.xyz>
// Licensed under MIT <https://opensource.org/licenses/MIT>

#pragma once

#include "Internal/CPlusPlusSupport.h"
#include "Internal/Boolean.h"

BA_CPLUSPLUS_SUPPORT_GUARD_START()
typedef enum {
    BA_ANSI_CODE_BOLD,
    BA_ANSI_CODE_UNDERLINE,
    BA_ANSI_CODE_BLINKING,
    BA_ANSI_CODE_INVERSE,
    BA_ANSI_CODE_RESET,
    BA_ANSI_CODE_FOREGROUND_BLACK,
    BA_ANSI_CODE_FOREGROUND_RED,
    BA_ANSI_CODE_FOREGROUND_GREEN,
    BA_ANSI_CODE_FOREGROUND_YELLOW,
    BA_ANSI_CODE_FOREGROUND_BLUE,
    BA_ANSI_CODE_FOREGROUND_MAGENTA,
    BA_ANSI_CODE_FOREGROUND_CYAN,
    BA_ANSI_CODE_FOREGROUND_WHITE,
    BA_ANSI_CODE_FOREGROUND_DEFAULT,
    BA_ANSI_CODE_BRIGHT_FOREGROUND_BLACK,
    BA_ANSI_CODE_BRIGHT_FOREGROUND_RED,
    BA_ANSI_CODE_BRIGHT_FOREGROUND_GREEN,
    BA_ANSI_CODE_BRIGHT_FOREGROUND_YELLOW,
    BA_ANSI_CODE_BRIGHT_FOREGROUND_BLUE,
    BA_ANSI_CODE_BRIGHT_FOREGROUND_MAGENTA,
    BA_ANSI_CODE_BRIGHT_FOREGROUND_CYAN,
    BA_ANSI_CODE_BRIGHT_FOREGROUND_WHITE,
    BA_ANSI_CODE_BRIGHT_FOREGROUND_RESET,
    BA_ANSI_CODE_BACKGROUND_BLACK,
    BA_ANSI_CODE_BACKGROUND_RED,
    BA_ANSI_CODE_BACKGROUND_GREEN,
    BA_ANSI_CODE_BACKGROUND_YELLOW,
    BA_ANSI_CODE_BACKGROUND_BLUE,
    BA_ANSI_CODE_BACKGROUND_MAGENTA,
    BA_ANSI_CODE_BACKGROUND_CYAN,
    BA_ANSI_CODE_BACKGROUND_WHITE,
    BA_ANSI_CODE_BACKGROUND_RESET,

    /**
     * Not a real code
     */
    BA_ANSI_CODE_SIZE
} BA_ANSI_Codes;

BA_Boolean BA_ANSI_IsEnabled(void);
const char* BA_ANSI_ConvertCodeToString(BA_ANSI_Codes ansi);
BA_CPLUSPLUS_SUPPORT_GUARD_END()
